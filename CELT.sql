DROP TABLE ACCOUNTS;
DROP TABLE RESTAURANT;
DROP TABLE CUSTOMER;
DROP TABLE MANAGERS;
DROP TABLE CONTACT_INFO;
DROP TABLE MENU_ITEM;
DROP TABLE INVOICE;
DROP TABLE INVOICE_ITEM;
DROP TABLE REVIEW;
DROP TABLE I_STATUS;

/*******************************************************************************
   Create Tables
********************************************************************************/
CREATE TABLE ACCOUNTS
(
  A_ID NUMBER PRIMARY KEY,
  U_NAME VARCHAR2(255) UNIQUE NOT NULL,
  P_WORD VARCHAR2(255)NOT NULL,
  MY_SALT VARCHAR2(255) UNIQUE
);
/
CREATE TABLE RESTAURANT
(
  R_ID NUMBER PRIMARY KEY,
  R_NAME VARCHAR2(255),
  R_STATUS VARCHAR2(255),
  CI_ID NUMBER,
  CONSTRAINT FK_RESTAURANT FOREIGN KEY (CI_ID) REFERENCES CONTACT_INFO(CI_ID)
);
/
CREATE TABLE CUSTOMER
(
  C_ID NUMBER PRIMARY KEY,
  FIRST_NAME VARCHAR2(255),
  LAST_NAME VARCHAR2(255),
  CONSTRAINT FK_CUSTOMER FOREIGN KEY (C_ID) REFERENCES ACCOUNTS(A_ID)
);
/
CREATE TABLE MANAGERS
(
  M_ID NUMBER PRIMARY KEY,
  R_ID NUMBER,
  CONSTRAINT FK_MANAGER FOREIGN KEY (M_ID) REFERENCES ACCOUNTS(A_ID),
  CONSTRAINT FK_MANAGERS FOREIGN KEY (R_ID) REFERENCES RESTAURANT(R_ID)
);
/
CREATE TABLE CONTACT_INFO
(
  CI_ID NUMBER PRIMARY KEY,
  PHONE VARCHAR2(255),
  EMAIL VARCHAR2(255),
  STREET VARCHAR2(255),
  CITY VARCHAR2(255),
  STATES VARCHAR2(255),
  ZIP VARCHAR2(255)
);
/
CREATE TABLE MENU_ITEM
(
  MI_ID NUMBER PRIMARY KEY,
  MI_NAME VARCHAR2(255) NOT NULL,
  MI_DESCRIPTION VARCHAR2(255),
  MI_SPECIAL VARCHAR2(255) NOT NULL,
  PRICE NUMBER(8,2) NOT NULL,
  R_ID NUMBER,
  CONSTRAINT FK_MENU_ITEM FOREIGN KEY (R_ID) REFERENCES RESTAURANT(R_ID)
);
/
CREATE TABLE INVOICE
(
  I_ID NUMBER PRIMARY KEY,
  I_STATUS NUMBER NOT NULL,
  TOTAL NUMBER(8,2) DEFAULT 0.00,
  CI_ID NUMBER,
  C_ID NUMBER,
  CONSTRAINT FK_INVOICE FOREIGN KEY (CI_ID) REFERENCES CONTACT_INFO(CI_ID),
  CONSTRAINT FK_INVOICE_S FOREIGN KEY (C_ID) REFERENCES CUSTOMER(C_ID),
  CONSTRAINT FK_INVOICE_T FOREIGN KEY (I_STATUS) REFERENCES I_STATUS(IS_ID)
);
/
CREATE TABLE INVOICE_ITEM
(
  I_ID NUMBER,
  MI_ID NUMBER,
  QUANTITY NUMBER,
  PRIMARY KEY(I_ID, MI_ID),
  CONSTRAINT FK_INVOICE_II FOREIGN KEY (I_ID) REFERENCES INVOICE(I_ID),
  CONSTRAINT FK_INVOICE_IM FOREIGN KEY (MI_ID) REFERENCES MENU_ITEM(MI_ID)
);
/
CREATE TABLE REVIEW
(
  RATE_ID NUMBER PRIMARY KEY,
  STARS NUMBER NOT NULL,
  COMMENTS VARCHAR2(255),
  R_ID NUMBER,
  CONSTRAINT FK_REVIEW FOREIGN KEY (R_ID) REFERENCES RESTAURANT(R_ID)
);
/
CREATE TABLE I_STATUS
(
  IS_ID NUMBER PRIMARY KEY,
  I_DESCRIPTION VARCHAR2(255) NOT NULL
);
/
/*******************************************************************************
   Create Functions
********************************************************************************/
CREATE OR REPLACE FUNCTION CHECKLOGIN(
  USERNAME_IN IN VARCHAR2,
  PASSWORD_IN IN VARCHAR2)
RETURN NUMBER 
IS 
ACCOUNT_ID_OUT NUMBER;
ROWSMATCHED NUMBER;
BEGIN
  SELECT COUNT(*)
  INTO ROWSMATCHED
  FROM ACCOUNTS
  WHERE U_NAME = USERNAME_IN AND
  P_WORD = PASSWORD_IN;
  IF ROWSMATCHED < 1
  THEN ACCOUNT_ID_OUT:=0;
  ELSE
  SELECT A_ID
  INTO ACCOUNT_ID_OUT
  FROM ACCOUNTS
  WHERE U_NAME = USERNAME_IN;
  END IF;
  RETURN ACCOUNT_ID_OUT;
END;
/
COMMIT;